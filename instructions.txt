-	A vector is entered by entering an integer indicating its number 
   	of items, followed by at least one space (and possibly more whitespace), 
   	followed by the actual items, followed by <enter>. Vector items are 
   	separated by whitespace (possibly including <enter>). 
   	e.g., the following 2 lines show how the user could input vectors
	[ 3.4, 24.8, 8.0, -6, 22 ] and [ 99, 107 ]: 
   	5 3.4 24.8 8.0 -6 22
   	2 +99 107

-	Note that a vector may be split over multiple lines. e.g., a user might 
   	enter vector [33.4, -6, -2, 6] as follows:
   	4 33.4
   	-6
   	-2 6

-	The largest vector size is 9

-	When the user enters a line starting with 0 (zero), the program 
   	terminates. The program also terminates when the end of input is
   	reached (EOF, which is ctrl-z for windows).

-	If the user enters more items on a line than the initial integer indicated, 
   	the program ignores the extra items on that line.

-	If the user enters too few items on a line than the initial integer
   	indicated, the program finds the remaining items on subsequent line(s).

-	If the program is starting to read the next input vector, but finds something 
   	other than an integer as the first item on the line, or an integer not in 
   	[1-9], then the program:
     	-	prints "BAD INPUT" on stderr
     	-	ignores the rest of this input line
     	-	continues on to read the next line (assumed to be the start of the next 
      		input vector)

-	If the user enters invalid characters in the item list, such as commas,
   	or non-digit characters (with the exception of '.', '+', '-', as appropriate), 
   	then the program behaves as above, i.e.: 
     	-	prints "BAD INPUT" on stderr
     	-	ignores the rest of this input line,
     	-	continues on to read the next line (assumed to be the start of the next
      		input vector)

-	Once the user enters an acceptable vector, the program prints out the vector
	that was entered, as well as the normalized vector.
